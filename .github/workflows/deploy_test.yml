name: check_folder_changes
on:
  workflow_dispatch:
  push:
    branches:
      - origin/main
permissions:
  id-token: write
  contents: read
  pull-requests: write
env:
  ENV: staging
  IN_AUTOMATION: 1
  PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
jobs:
  check_folder_changes:
    runs-on: ubuntu-latest
    outputs:
      folder_changed: ${{ steps.filter.outputs.folder_changed }}
    steps:
      - uses: actions/checkout@v3
      - id: filter
        run: |
          echo "Checking for changes in 'packer/'..."
          if ! git diff --quiet origin/main -- ./packer; then
            echo "folder_changed=true" >> $GITHUB_OUTPUT
          else
            echo "folder_changed=false" >> $GITHUB_OUTPUT
          fi

  pkrbuild_test:
   needs: check_folder_changes
   if: needs.check_folder_changes.outputs.folder_changed == 'true'
   name: pkrbuild_test
   runs-on: ubuntu-latest
   steps:
     - name: Clone repo
       uses: actions/checkout@v3
       with:
         ref: sergey-ga-file_integrity_check3
#    - name: configure aws credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        role-to-assume: ${{ secrets.aws_role_arn_apply_staging }}
#        role-session-name: secops_siem_gh_workflow_apply_pkr
#        role-duration-seconds: 3600 # valid for 60 minutes
#        aws-region: "eu-central-1"
#    - name: Setup Packer
#      uses: hashicorp/setup-packer@main
#      id: pkr-setup
#      with:
#        version: 1.8.3
#    - name: Check Packer Format
#      id: pkr-fmt
#      working-directory: ./packer
#      run: git diff --quiet origin/main -- ./packer || (make pkr-fmt-check)
#    - name: Packer Init
#      id: pkr-init
#      working-directory: ./packer
#      run: git diff --quiet origin/main -- ./packer || (PKR_VAR_ENV=$ENV make pkr-init)
#    - name: Packer Validate
#      id: pkr-validate
#      working-directory: ./packer
#      run: git diff --quiet origin/main -- ./packer || (PKR_VAR_ENV=$ENV make pkr-validate)
#    - name: Packer build
#      id: pkr-build
#      working-directory: ./packer
#      run: git diff --quiet origin/main -- ./packer || (PKR_VAR_ENV=$ENV make pkr-build PACKERFlAGS="-color=false")
#      env:
#        PACKER_LOG: 1
#
#tfapply:
#  name: tfapply
#  needs: pkrbuild
#  runs-on: ubuntu-latest
#  env:
#    TF_VAR_aiven_api_token: ${{secrets.aiven_api_token_secsvc}}
#  steps:
#    - name: Clone repo
#      uses: actions/checkout@v2
#    - name: configure aws credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        role-to-assume: ${{ secrets.aws_role_arn_apply_staging }}
#        role-session-name: secops_siem_gh_workflow_apply_tf
#        role-duration-seconds: 1800 # valid for 30 minutes
#        aws-region: "eu-central-1"
#    - name: Init terraform
#      uses: hashicorp/setup-terraform@v2
#      with:
#        terraform_version: 1.3.9
#    - name: Check Terraform Format
#      id: tf-fmt
#      working-directory: ./terraform
#      run: make tf-fmt-check 
#    - name: Terraform Init
#      id: tf-init
#      working-directory: ./terraform
#      run: make tf-init TFFLAGS="-input=false"
#    - name: Terraform Validate
#      id: tf-validate
#      working-directory: ./terraform
#      run: make tf-validate
#    - name: Terraform Apply
#      id: tf-apply
#      working-directory: ./terraform
#      run: |
#        make tf-apply TFFLAGS="-no-color -input=false -auto-approve"